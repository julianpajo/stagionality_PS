# Comma-separated list of job names to execute on startup (for instance, `job1,job2`). By default, all Jobs found in the context are executed.
spring.batch.job.names=importPsJob

maxConcurrencyLimit=4
#----------------------------
# WARNING
# If you set the job name to updateAndRefreshPsJob or refreshUserMatViewsPsJob
# increase this value to maxConcurrencyLimit
balancedConcurrencyLimit=2

refreshMvBlacklist=

#------------------------------
# input reader job import
job.import.reader.shapefilePath=/home/vagrant/Desktop/dati_test/

#----------------------------
# JobRepository
jobRepository.datasource.url=jdbc:postgresql://localhost:5435/JOBS
jobRepository.datasource.databaseName=JOBS
jobRepository.datasource.portNumber=5435
jobRepository.datasource.serverName=localhost
jobRepository.datasource.username=rheticus
jobRepository.datasource.password=pkt284restiCUS

#----------------------------
# DB input writer job import
db.datasource.url=jdbc:postgresql://localhost:5433/RHETICUS
db.datasource.databaseName=RHETICUS
db.datasource.portNumber=5433
db.datasource.serverName=localhost	
db.datasource.username=rheticus
db.datasource.password=pkt284restiCUS



#----------------------------
# Advanced configurations
scatterer.commit.interval=30000
ps.commit.interval=30000
measurement.commit.interval=30000
keepAliveSeconds=10

splitTaskExecutor.concurrencyLimit=${maxConcurrencyLimit}
importMetadataTaskExecutor.concurrencyLimit=${maxConcurrencyLimit}
importScattererTaskExecutor.concurrencyLimit=${maxConcurrencyLimit}

importMeasurementTaskExecutor.concurrencyLimit=${balancedConcurrencyLimit}
importTaskExecutor.concurrencyLimit=${balancedConcurrencyLimit}
updateAccelerationNormTaskExecutor.concurrencyLimit=${balancedConcurrencyLimit}
refreshMvTaskExecutor.concurrencyLimit=${balancedConcurrencyLimit}

refreshMvConcurrently=true
