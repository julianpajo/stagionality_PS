services:
  proxy:
    command:
    - --providers.file.directory=/etc/traefik/dynamic
    - --providers.file.watch=true
    - --api.debug=true
    - --api.dashboard=true
    - --providers.docker=true
    - --providers.docker.swarmMode=true
    - --providers.docker.exposedByDefault=false
    - --accessLog=true
    - --accessLog.filePath=/access.log
    - --accessLog.format=json
    - --accessLog.fields.headers.names.X-Correlation-Id=keep
    - --log.level=DEBUG
    - --log.filePath=/traefik.log
    - --log.format=json
    - --providers.docker.network=traefik-public
    - --entrypoints.http.address=:80
    - --entrypoints.http.http.redirections.entrypoint.to=https
    - --entrypoints.http.http.redirections.entrypoint.scheme=https
    - --entrypoints.https.address=:443
    - --experimental.plugins.correlationid.modulename=github.com/soulbalz/correlationid
    - --experimental.plugins.correlationid.version=v1.0.0
    deploy:
      labels:
        traefik.docker.network: traefik-public
        traefik.enable: "true"
        traefik.http.routers.traefik-public-https.entrypoints: https
        traefik.http.routers.traefik-public-https.rule: Host(`euler.local`) &&
          (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
        traefik.http.routers.traefik-public-https.service: api@internal
        traefik.http.routers.traefik-public-https.tls: "true"
        traefik.http.services.proxy.loadbalancer.server.port: "8080"
    image: traefik:v2.4
    networks:
      traefik-public: null
    ports:
    - mode: host
      target: 443
      published: 443
      protocol: tcp
    volumes:
    - ../certificates/certs-traefik.yml:/etc/traefik/dynamic/certs-traefik.yml:rw
    - ../certificates/euler.test.key:/etc/certs/euler.test.key:rw
    - ../certificates/euler.test.crt:/etc/certs/euler.test.crt:rw
    - ../certificates/displacement.test.key:/etc/certs/displacement.test.key:rw
    - ../certificates/displacement.test.crt:/etc/certs/displacement.test.crt:rw
    - ../certificates/auth.test.key:/etc/certs/auth.test.key:rw
    - ../certificates/auth.test.crt:/etc/certs/auth.test.crt:rw
    - ../certificates/keycloak.test.key:/etc/certs/keycloak.test.key:rw
    - ../certificates/keycloak.test.crt:/etc/certs/keycloak.test.crt:rw
    - ../certificates/geoserver.test.key:/etc/certs/geoserver.test.key:rw
    - ../certificates/geoserver.test.crt:/etc/certs/geoserver.test.crt:rw
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /data/development/docker_data/traefik/traefik.log
      target: /traefik.log
      bind:
        create_host_path: true
    - type: bind
      source: /data/development/docker_data/traefik/access.log
      target: /access.log
      bind:
        create_host_path: true
    - type: bind
      source: /data/development/docker_data/traefik/userfiles
      target: /userfiles
      read_only: true
      bind:
        create_host_path: true
networks:
  traefik-public:
    name: traefik-public
    external: true
