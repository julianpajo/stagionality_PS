services:
  keycloak:
    depends_on:
    - keycloak-postgres
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.keycloak-https-admin.entrypoints: https
        traefik.http.routers.keycloak-https-admin.rule: Host(`keycloak.euler.local`)
          && Path(`/auth/admin`)
        traefik.http.routers.keycloak-https-admin.tls: "true"
        traefik.http.routers.keycloak-https.entrypoints: https
        traefik.http.routers.keycloak-https.rule: Host(`keycloak.euler.local`)
        traefik.http.routers.keycloak-https.tls: "true"
        traefik.http.services.keycloak.loadbalancer.server.port: "8080"
    environment:
      DB_ADDR: keycloak-postgres
      DB_DATABASE: keycloak
      DB_PASSWORD_FILE: /run/secrets/keycloak_postgres_passwd
      DB_SCHEMA: public
      DB_USER: keycloak
      DB_VENDOR: POSTGRES
      KC_PROXY: edge
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      KEYCLOAK_PASSWORD_FILE: /run/secrets/keycloak_admin_passwd
      KEYCLOAK_USER: admin
      PROXY_ADDRESS_FORWARDING: "true"
    image: quay.io/keycloak/keycloak:legacy
    networks:
      traefik-public: null
    ports:
    - mode: ingress
      target: 8080
      published: 7080
      protocol: tcp
    secrets:
    - source: keycloak_postgres_passwd
    - source: keycloak_admin_passwd
    volumes:
    - type: bind
      source: /home/vagrant/stagionality_PS/deployment/swarm/config/keycloak/initial.json
      target: /tmp/realm-export.json
      bind:
        create_host_path: true
  keycloak-postgres:
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_PASSWORD_FILE: /run/secrets/keycloak_postgres_passwd
      POSTGRES_USER: keycloak
    image: postgres
    networks:
      traefik-public: null
    secrets:
    - source: keycloak_postgres_passwd
    volumes:
    - type: bind
      source: /data/development/docker_data/postgres-keycloak/db
      target: /var/lib/postgresql/data
      bind:
        create_host_path: true
  oauth2-proxy:
    command:
    - --http-address
    - 0.0.0.0:4180
    depends_on:
    - keycloak
    deploy:
      labels:
        traefik.backend: gui
        traefik.enable: "true"
        traefik.http.routers.gui.entryPoints: https
        traefik.http.routers.gui.rule: Host(`displacement.euler.local`)
        traefik.http.routers.gui.tls: "true"
        traefik.http.services.gui.loadbalancer.server.port: "4180"
    environment:
      OAUTH2_PROXY_CLIENT_ID: euler
      OAUTH2_PROXY_CLIENT_SECRET: xzwfZ9vzJBFntl0jiESPJGvRBj6UPpxT
      OAUTH2_PROXY_COOKIE_CSRF_PER_REQUEST: "true"
      OAUTH2_PROXY_COOKIE_SECRET: cYW8ox+3ySQZ5M+92hsZhnUqiQqM5U7B
      OAUTH2_PROXY_COOKIE_SECURE: "false"
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      OAUTH2_PROXY_LOGIN_URL: https://keycloak.euler.local/auth/realms/Euler/protocol/openid-connect/auth
      OAUTH2_PROXY_OIDC_ISSUER_URL: https://keycloak.euler.local/auth/realms/Euler
      OAUTH2_PROXY_OIDC_JWKS_URL: https://keycloak.euler.local/auth/realms/Euler/protocol/openid-connect/certs
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_PROVIDER: keycloak-oidc
      OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: Keycloak
      OAUTH2_PROXY_REDEEM_URL: https://keycloak.euler.local/auth/realms/Euler/protocol/openid-connect/token
      OAUTH2_PROXY_REDIRECT_URL: https://test.euler.local/oauth2/callback
      OAUTH2_PROXY_SKIP_OIDC_DISCOVERY: "true"
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
      OAUTH2_PROXY_UPSTREAMS: http://euler_gui/
    image: bitnami/oauth2-proxy:7.3.0
    networks:
      traefik-public: null
    ports:
    - mode: ingress
      target: 4180
      published: 4180
      protocol: tcp
    volumes:
    - type: bind
      source: /home/vagrant/stagionality_PS/deployment/certificates/keycloak.test.crt
      target: /etc/ssl/certs/ca-certificates.crt
      bind:
        create_host_path: true
networks:
  traefik-public:
    name: traefik-public
    external: true
secrets:
  keycloak_admin_passwd:
    name: keycloak_admin_passwd
    external: true
  keycloak_postgres_passwd:
    name: keycloak_postgres_passwd
    external: true
